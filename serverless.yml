service: kembek-games-app-content

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1

plugins:
  - serverless-finch
  - serverless-single-page-app-plugin
  - serverless-s3-cleaner

custom:
  client:
    bucketName: kembek-games-app-content
    distributionFolder: dist
  s3BucketName: ${self:custom.client.bucketName}
  s3LocalPath: ${self:custom.client.distributionFolder}/
  serverless-s3-cleaner:
    buckets:
      - ${self:custom.client.bucketName}

resources:
  Resources:
    WebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.client.bucketName}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerEnforced

    WebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref WebAppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: "AllowCloudFrontServicePrincipal"
              Effect: Allow
              Principal:
                Service: cloudfront.amazonaws.com
              Action: s3:GetObject
              Resource: "arn:aws:s3:::${self:custom.client.bucketName}/*"
              Condition:
                StringEquals:
                  AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${WebAppCloudFrontDistribution}"

    OriginAccessControlPolicy:
      Type: AWS::CloudFront::OriginAccessControl
      Properties:
        OriginAccessControlConfig:
          OriginAccessControlOriginType: s3
          Name: ${self:custom.client.bucketName}-OAC
          SigningProtocol: sigv4
          SigningBehavior: always
          Description: Access control for CloudFront to S3

    WebAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !GetAtt WebAppS3Bucket.RegionalDomainName
              Id: ${self:custom.client.bucketName}-Origin
              OriginAccessControlId: !Ref OriginAccessControlPolicy
              S3OriginConfig:
                OriginAccessIdentity: ""
          Enabled: true
          IPV6Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods: ["GET", "HEAD", "OPTIONS"]
            CachedMethods: ["GET", "HEAD", "OPTIONS"]
            ForwardedValues:
              Headers: ["Access-Control-Request-Headers", "Origin"]
              QueryString: false
              Cookies:
                Forward: none
            TargetOriginId: ${self:custom.client.bucketName}-Origin
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            DefaultTTL: 0
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

  Outputs:
    WebAppS3BucketOutput:
      Value: !Ref WebAppS3Bucket
    WebAppCloudFrontDistributionOutput:
      Value: !GetAtt WebAppCloudFrontDistribution.DomainName
